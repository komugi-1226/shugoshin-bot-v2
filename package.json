{
  "name": "shugoshin-bot-v2",
  "version": "1.0.0",
  "description": "守護神ボット 機能実装ロードマップ (メンション警告方式・改訂版)\r 【フェーズ1: コア機能の完成】 ← まずはここを完璧に！\r 機能セクション\t機能名 / 項目\t優先度\t重要度\t備考\r 4.2. 初期設定機能\t/setup コマンド\t★★★★★\t★★★★★\t最優先！ これがないと他のサーバーで使えない。Botとして自立するための必須機能。報告チャンネルやロールIDをコマンドで設定できるようにする。\r 4.1. 通報機能\tissue_warning (メンション警告) 機能\t★★★★★\t★★★★☆\t/reportコマンドを完成させる最後のピース。通報者が警告発行を選択し、Botが報告チャンネルで対象者にメンションできるようにする。\r 5.2. スパム対策\t報告のクールダウン\t★★★★☆\t★★★☆☆\t悪用を防ぐための基本的な防衛機能。同一ユーザーからの連続報告を一定時間制限する。（1日の上限より先にこちらを実装する方が簡単）\r 【フェーズ2: 管理機能と匿名性の強化】 ← コアが固まったら着手\r 機能セクション\t機能名 / 項目\t優先度\t重要度\t備考\r 4.3. 報告管理\twarning サブコマンド\t★★★☆☆\t★★★☆☆\t管理者が後から手動でメンション警告を送れるようにする。フェーズ1の警告機能と連携する。\r 4.2. 初期設定機能\t警告送信の遅延設定\t★★★☆☆\t★★★★☆\t/setupに機能を追加。匿名性をさらに高めるための重要な機能。警告を即時ではなく、設定した時間（例: 5分後）に送信する。\r 5.2. スパム対策\t1日の報告数上限\t★★☆☆☆\t★★★☆☆\t同一ユーザーからの1日の報告回数を制限する。クールダウンの次のステップ。\r 5.3. データ管理\t報告データの自動削除\t★★☆☆☆\t★★★★☆\t個人情報を守り、データベースを軽く保つための重要な機能。90日以上経過した報告を自動で削除するなど。\r 【フェーズ3: 自動化と高度機能】 ← Botをさらに賢くする\r 機能セクション\t機能名 / 項目\t優先度\t重要度\t備考\r 4.5. 自動警告機能\t同一対象への複数報告で警告\t★★★☆☆\t★★★☆☆\t管理者の手間を減らす最初の自動化。「同じ人が24時間以内に3回通報されたら自動で警告を発行する」など。\r 4.3. 報告管理\tlist の日数指定\t★★☆☆☆\t★★☆☆☆\t報告が増えてきたら欲しくなる、管理の効率化機能。\r 4.3. 報告管理\tstats の期間指定\t★★☆☆☆\t★★☆☆☆\t長期的な傾向を見るための分析機能。\r 4.2. 初期設定機能\t警告メッセージのトーン選択\t★☆☆☆☆\t★★☆☆☆\t/setupに機能を追加。より丁寧な運用を目指すためのカスタマイズ機能。",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "supabase": "supabase",
    "supabase:start": "supabase start",
    "supabase:stop": "supabase stop",
    "supabase:status": "supabase status",
    "supabase:reset": "supabase db reset"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mo-tomi/shugoshin-bot-v2.git"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/mo-tomi/shugoshin-bot-v2/issues"
  },
  "homepage": "https://github.com/mo-tomi/shugoshin-bot-v2#readme",
  "devDependencies": {
    "supabase": "^2.26.9"
  }
}
